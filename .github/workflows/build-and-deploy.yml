name: Build and Deploy Emscripten Website

on:
  push:
    branches:
      - main # Or your default branch, e.g., 'master'
  workflow_dispatch: # Allows manual triggering of the workflow

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest # Using Ubuntu for the build environment

    environment: # Recommended: Add this for GitHub Pages environment tracking
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Checkout hire_me repository
        uses: actions/checkout@v4
        with:
          path: hire_me # Clone your repository into a directory named 'hire_me'

      - name: Checkout Visage repository
        uses: actions/checkout@v4
        with:
          repository: VitalAudio/visage
          path: hire_me/visage # <--- CORRECTED: Use a relative path here. This will clone to ${{ github.workspace }}/hire_me/visage

      # --- NEW STEP: Copy Custom Visage CMakeLists.txt and Web Assets ---
      - name: Copy custom CMakeLists.txt and web assets
        run: |
          # Copy custom CMakeLists.txt
          # <--- CORRECTED: Update the destination path to reflect where Visage is now cloned.
          cp "${{ github.workspace }}/hire_me/CustomVisageCmake/CMakeLists.txt" "${{ github.workspace }}/hire_me/visage/CMakeLists.txt"

          # Ensure the build directory exists before copying web assets into it
          mkdir -p "${{ github.workspace }}/hire_me/build"

          # Copy index.html and frame.html to the build directory that will be uploaded
          cp "${{ github.workspace }}/hire_me/index.html" "${{ github.workspace }}/hire_me/build/web/index.html"
          cp "${{ github.workspace }}/hire_me/frame.html" "${{ github.workspace }}/hire_me/build/web/frame.html"
        working-directory: ${{ github.workspace }} # Run from the root to easily access both repos


      - name: Set up Emscripten SDK
        run: |
          git clone https://github.com/emscripten-core/emsdk.git emsdk
          cd emsdk
          ./emsdk install latest
          ./emsdk activate latest
        working-directory: ${{ github.workspace }}

      - name: Set up Emscripten Environment
        run: |
          echo "EMSDK_PATH=$(pwd)/emsdk" >> $GITHUB_ENV
          echo "$(pwd)/emsdk/upstream/emscripten" >> $GITHUB_PATH
          echo "$(pwd)/emsdk/node/18.17.1_64bit/bin" >> $GITHUB_PATH

        working-directory: ${{ github.workspace }}

      - name: Configure and Build
        run: |
          # The mkdir build is now handled in the copy step to ensure it exists early
          # You might want to remove this mkdir here if it's already created.
          # Or, ensure it's idempotent. It's fine for `mkdir build` if it exists.
          cd hire_me/build # Navigate into the build directory that already exists
          cmake -DCMAKE_TOOLCHAIN_FILE="${{ github.workspace }}/emsdk/upstream/emscripten/cmake/Modules/Platform/Emscripten.cmake" ..
          make
        working-directory: ${{ github.workspace }} # Changed this working directory to root for hire_me/build access

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3 # Using v3 for stability
        with:
          path: ${{ github.workspace }}/hire_me/build/web # This path now contains index.html, frame.html, and your build output

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4